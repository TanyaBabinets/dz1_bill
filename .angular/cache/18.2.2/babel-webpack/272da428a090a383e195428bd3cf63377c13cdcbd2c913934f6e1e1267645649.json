{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n// Директива import импортирует функциональность модуля angular/core, \n// предоставляя доступ к функции декоратора @Component.\nimport { Component } from '@angular/core';\n// Также импортируем модуль FormsModule, который необходим для работы с полями ввода\nimport { FormsModule } from \"@angular/forms\";\n// Функция-декоратор @Component ассоциирует метаданные с классом компонента AppComponent.\n// Декоратор @Component позволяет идентифицировать класс AppComponent как компонент.\nlet AppComponent = class AppComponent {\n  name = \"\";\n};\nAppComponent = __decorate([Component({\n  selector: 'my-app',\n  standalone: true,\n  // указывает, что компонент будет независимым, то есть для него не нужно создавать дополнительных модулей\n  imports: [FormsModule],\n  // template:\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']`\n\t<div class=\"quotes\">«Patience is a key element of success»<br>\n«If you think your teacher is tough, wait till you get a boss»<br>\n«Life is not fair — get used to it!»<br>\n«Success is a lousy teacher. It seduces smart people into thinking they\ncan’t lose»<br>\n«Be nice to nerds. Chances are you’ll end up working for one»\n</div>\n\t<div> <img src=\"../assets/bill.jfif\"> </div>\n\t<h2>Гейтс Билл</h2>\n\t\t\t\t<h4> \nАмериканский предприниматель, общественный деятель, филантроп,\nодин из создателей компании Microsoft. </h4><br><p> Уильям Генри Гейтс III - американский предприниматель и общественный деятель, филантроп, один из создателей (совместно с Полом Алленом) и бывший крупнейший акционер компании Microsoft. Также является сопредседателем благотворительного Фонда Билла и Мелинды Гейтс, членом совета директоров Berkshire Hathaway, генеральным директором Cascade investment.\n\nМесто рождения, образование. Родился в Сиэтле, штат Вашингтон в семье корпоративного адвоката Уильяма Генри Гейтса II и члена совета директоров First Interstate Bank, Pacific Northwest Bell и национального совета USWest, United Way Мэри Максвелл Гейтс.\n\nБилл Гейтс учился в муниципальной начальной школе, а затем - в частной школе Lakeside School. В 1973 году он поступил в Гарвардский университет на факультет права, но был отчислен в 1975 году за неуспеваемость и прогулы.\n\nКарьера. В 1970 была создана первая компания Traf-O-Data в которой работал Билл Гейтс и его одноклассники Пол Аллен и Пол Гилберт. Компания занималась разработкой программы для оптимизации уличного движения, это была первая успешная программа проданная Биллом Гейтсом правительству за $20 тыс.\n\nВ 1971 году фирма Information Sciences предложила Биллу и Полу написать программу для составления платежных ведомостей.\n\nВ 1972 Гейтс написал пакет программ по распределению энергии и безопасности Бонневильской плотины. Оплата составила $30 тыс\n\nВ конце 1973 года Пол Аллен, друг Билла, получил место в Бостонском отделении \"Ханивел\", и Гейтс принялся помогать ему в составлении программ.\n\nВ 1974 году компания MITS создала новый персональный компьютер - Аltair 8800 и Билл предлагает для этого компьютера совершенно новый язык программирования, позже завоевавший весь мир - BASIC. Пробный пуск нового языка прошел удачно и Гейтс получает в ней работу.\n\nВ 1975 году Гейтс совместно с Алленом основали компанию Micro-Soft, позднее названую Microsoft Corporation.</p>\n\t\t\t`,\n  styles: [`h2, p {color:green;}`]\n})], AppComponent);\nexport { AppComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}