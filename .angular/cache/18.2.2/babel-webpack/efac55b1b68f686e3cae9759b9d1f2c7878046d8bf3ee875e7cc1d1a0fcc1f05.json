{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n// Директива import импортирует функциональность модуля angular/core, \n// предоставляя доступ к функции декоратора @Component.\nimport { Component } from '@angular/core';\n// Также импортируем модуль FormsModule, который необходим для работы с полями ввода\nimport { FormsModule } from \"@angular/forms\";\n// Функция-декоратор @Component ассоциирует метаданные с классом компонента AppComponent.\n// Декоратор @Component позволяет идентифицировать класс AppComponent как компонент.\nlet AppComponent = class AppComponent {\n  name = \"Иван\";\n  surname = \"Иванов\";\n  age = 25;\n  rating = 11;\n  increase() {\n    this.rating++;\n  }\n  decrease() {\n    this.rating--;\n  }\n};\nAppComponent = __decorate([Component({\n  selector: 'my-app',\n  standalone: true,\n  // указывает, что компонент будет независимым, то есть для него не нужно создавать дополнительных модулей\n  imports: [FormsModule],\n  template: `< div > <img src=\"../assets/bill.jfif\"> </> \n\t<h2>Гейтс Билл</h2>\n\t\t\t\t<p> \nАмериканский предприниматель, общественный деятель, филантроп,\nодин из создателей компании Microsoft</p>\n\t\t\t\t<p>Возраст: {{age}}</p>\n                <p>Рейтинг: {{rating}}</p>\n\t\t\t\t<input type=\"text\" [value]=\"name\" /><br />\n\t\t\t\t<input type=\"text\" [(ngModel)]=\"surname\" /><br />\n\t\t\t\t<input type=\"text\" [value]=\"age\" /><br />\n\t\t\t\t<input type=\"text\" value=\"{{rating}}\" /><br />\n\t\t\t\t<button on-click=\"increase()\">++</button><br />\n\t\t\t\t<button (click)=\"decrease()\">--</button><br />`\n})], AppComponent);\nexport { AppComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}